//2798. Number of Employees Who Met the Target

//C++
class Solution {
public:
    int numberOfEmployeesWhoMetTarget(vector<int>& hours, int target) {
       int count = 0;
       for(auto hour: hours){
           if(hour>= target){
               count++;
           }
       }
       return count; 
    }
};

//Time complexity --> O(N)

//Java
class Solution {
    public int numberOfEmployeesWhoMetTarget(int[] hours, int target) {
        int count=0;
        for(int hour: hours){
            if(hour>=target){
                count++;
            }
        }
        return count;
    }
}

//C++ Time complexity --> O(long(N))
class Solution {
public:
    int numberOfEmployeesWhoMetTarget(vector<int>& hours, int target) {
        sort(hours.begin(), hours.end());   // sorting our vector
        auto it = lower_bound(hours.begin(), hours.end(), target); // finding the lowest loc of the target val
        return hours.size() - ( it - hours.begin());  // subtracting the length of the values which are lower than our target
    }
};
